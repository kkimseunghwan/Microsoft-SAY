# -*- coding:utf-8 -*-

from operator import xor


height = float(input('키 : '))
age = int(input("나이 : "))
print("---------------")
print("키는 %.1f, 나이는 %d살" % (height, age))


# 연산자 : stack 메모리 영역이 대상 <- 모든 프로그래밍 언어에 해당.
#   근데, 어차피 파이썬은 모든 데이터가 heap 영역에 들어감. 연산자 쓰면 heap 영역으로 알아먹게 해놓음
#   (다른 프로그래밍 언어와 다름)


# A 롤러코스터 -> 키가 140 넘어야 가능
A = height > 140
print(A)

# B 롤러코스터 -> 나이가 10살 이하까지만 탈 수 있음
# 변수가 앞쪽에 배치되는걸 선호하는 문화
#   B = 10 > age ->> 가능은 한데 그냥 생긴게 꼴받음
B = age <= 10 
print(B)

# C는 5살 전용
C = (age == 5)
print(C)


# [ AND, OR 의 단축 평가 ]
# &&(and) - 첫번째 조건이 False 일 경우, 두번째 요소를 평가하지 않음
#   첫번째 조건이 False일 확률이 높은 조건으로 코드를 구성 시, 시간 절약 가능
# ||(or) - 첫번째 조건이 True 일 경우, 두번째 요소를 평가하지 않음
#   첫번째 조건이 True일 확률이 높은 조건으로 코드를 구성 시, 시간 절약 가능

# &, | (무식하게 연산) -> 앞이 참이든 거짓이든 끝까지 연산 (비트연산자로 사용)


# D는 나이가 5살 이상이고, 키도 130 이상이여야 함.
D = (height >= 130) and (age >= 5) 
print(D)

# E는 나이가 50살이거나, 키가 140 이상 이면 가능
E = (height >= 140) or (age >= 50)
print(E)

# F는 나이가 10살 이상이고, 20살 이상이면 탐
F = (age >= 20)
print(F)

# G는 100 <= 키 <= 130 만 탈 수 있음
G = (height <= 130) and (height >= 100)
G = 100 <= height <= 130 # Python만 가능한 문법.
print(G)

# H는 나이가 5살 이상이든지
# 키가 130 이하든지
# 둘 중 하나만,
H = (age >= 5) ^ (height <= 130)
print(H)

# I는 H의 반대
I = not H

# 3항 연신자?
SAY = "타세요" if age > 10 else "가세요"

